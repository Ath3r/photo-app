// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model Post {
  id          Int      @id @default(autoincrement())
  description String   @db.VarChar(255)
  url         String   @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
}

model Permission {
  id          Int      @id @default(autoincrement())
  type        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  createdAt   DateTime @default(now())
  roles       Role[]
}

model Role {
  id          Int          @id @default(autoincrement())
  // user        User         one to one relationship with user
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int          @unique
  permissions Permission[]
}

model User {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  email       String   @db.VarChar(255)
  password    String   @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  posts       Post[]
  role        Role?  
  sessions    Session[]
}

model Session {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  token       String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}